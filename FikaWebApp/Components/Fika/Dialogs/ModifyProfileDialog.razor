@using System.Net
@using FikaShared
@using FikaShared.Requests
@using FikaShared.Responses
@using MudBlazor

@inject IDialogService DialogService
@inject HttpClient HttpClient

<MudDialog>
	<DialogContent>
		<MudText Typo="Typo.h6">Editing @Profile.Nickname</MudText>
		<MudStack Row>
			<MudButton OnClick="AddFleaBan" Disabled="Profile.HasFleaBan">Add Flea Ban</MudButton>
			<MudButton OnClick="RemoveFleaBan" Disabled="!Profile.HasFleaBan">Remove Flea Ban</MudButton>
		</MudStack>
		<MudStack Row>
			<MudButton OnClick="SendItem">Send Item</MudButton>
		</MudStack>
	</DialogContent>
	<DialogActions>
		<MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.CheckCircle" OnClick="Close">Save</MudButton>
		<MudButton Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Cancel" OnClick="Cancel">Cancel</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter]
	public IMudDialogInstance MudDialog { get; set; }

	[Parameter]
	public ProfileResponse Profile { get; set; }


	private async Task SendItem()
	{
		var dialog = await DialogService.ShowAsync<SendItemDialog>("Send Item");
		var result = await dialog.Result;

		if (result.Data is (string itemTpl, int amount))
		{
			SendItemRequest sendItemRequest = new()
			{
				ProfileId = Profile.ProfileId,
				ItemTemplate = itemTpl,
				Amount = amount
			};

			// TODO: Send item
		}
	}

	private async Task AddFleaBan()
	{
		var confirmation = await DialogService.ShowAsync<ConfirmFleaBanDialog>("Confirm Flea Ban");
		var result = await confirmation.Result;

		if (!result.Canceled)
		{
			if (result.Data is int amountOfDays)
			{
				amountOfDays = Math.Clamp(amountOfDays, 0, 9999);
				var response = await HttpClient.PostAsJsonAsync("put/addfleaban", new AddFleaBanRequest()
				{
					ProfileId = Profile.ProfileId,
					AmountOfDays = amountOfDays
				});

				Profile.HasFleaBan = response.StatusCode is HttpStatusCode.OK;
			}
		}
	}

	private async Task RemoveFleaBan()
	{
		var confirmation = await DialogService.ShowAsync<YesNoDialog>("Confirmation");
		var result = await confirmation.Result;

		if (!result.Canceled)
		{
			var response = await HttpClient.PostAsJsonAsync("put/removefleaban", new ProfileIdRequest()
			{
				ProfileId = Profile.ProfileId
			});

			if (response.StatusCode is HttpStatusCode.OK)
			{
				Profile.HasFleaBan = false;
			}
		}
	}

	private void Close()
	{
		MudDialog.Close(DialogResult.Ok(true));
	}

	private void Cancel()
	{
		MudDialog.Cancel();
	}
}