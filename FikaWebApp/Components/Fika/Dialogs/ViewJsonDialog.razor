@using System.Text.Json
@inject IJSRuntime JS

<MudDialog>
	<DialogContent>
		<MudPaper Elevation="2">
			@if (!_fancyView)
			{
				<MudTextField T="string" Text="@RawJson" Lines="25" Underline="false" Variant="Variant.Outlined" FullWidth="true" Margin="Margin.Normal" ReadOnly />
			}
			else
			{
				<CodeBlock Code="@RawJson" Language="CodeLanguage.Json" EnableLineNumbers="false" />
			}
		</MudPaper>
	</DialogContent>
	<DialogActions>
		<MudTooltip Text="WARNING: Can be really slow on big files!" Color="Color.Error">
			<MudSwitch @bind-Value="@_fancyView" Color="Color.Success" Label="Code View" Class="mr-4" />
		</MudTooltip>
		<FikaPrimaryButton StartIcon="@Icons.Custom.FileFormats.FileCode" Text="Download" OnClick="DownloadJson" />
		<MudButton Variant="Variant.Filled" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.Cancel" OnClick="Cancel">Close</MudButton>
	</DialogActions>
</MudDialog>

@code {
	[CascadingParameter]
	private IMudDialogInstance MudDialog { get; set; } = default!;

	[Parameter]
	public string? RawJson { get; set; }

	[Parameter]
	public string? FileName { get; set; }

	private bool _fancyView;

	private async Task DownloadJson()
	{
		await JS.InvokeVoidAsync("downloadFile", $"{FileName}.json", RawJson);
	}

	private void Cancel()
	{
		MudDialog.Cancel();
	}
}
